создание основных страниц регистрации и входа в систему
настройка роутинга и стилей 
использование tanstackquery (создание провайдера) и оборачивание всей страницы в провайдер
isLogin задать компонентам (какой это компонент на регистрацию или на вход) и также создать интерфейс чем будет являться isLogin
создание файла типов для useForm() IUser и IFormData и использование useForm 
соответственно (взять из юзформ register, handleSubmit and reset)
Брать useRouter из navigation 
Подготовить отдельный сервис с запросами (создать отдельный файл констант с API_URL и IS_CLIENT 1:40:40)

В сервисе класс с методами на вход и регистрацию, отправка запроса на сервер  1:41:40 (отправка пост запроса, с передачей даты также используя Promise, обработка ошибки и возврат ответа в константе response.json() и перед этим создание интерфейса на проверку что нам приходит с сервера должен приходить accessToken и user: IUser) 
Создание запроса на получение профиля и информации о нем (выглядит запрос примерно также)
создание мутаций уже внутри нашей формы ( также брать isPending для блокировки кнопки в момент запроса)( mutationKey:    mutationFn: onSuccess: запись в локал сторейдж токена, отчистка и переадресация)
потом onSubmit делаем соотственно проверяя isLogin запрос на регистрацию отправляем или на логин
создание формы используя hableSubmit(onSubmit), {...register('email', {required: true})}
сделать функцию выхода из системы (просто удаление токена)
при первой загрузке в Home компоненте проверяем в useEffect есть ли у человека токен и если токена в локалсторедж нет то перенаправляем его на форму входа и также useQuery запрос на получение профиля 1:53:15